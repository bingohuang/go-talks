f("hello", "world") // f 运行; 等待

go f("hello", "world") // f 开始运行
g() // 不用等待 f 返回

timerChan := make(chan time.Time)
go func() {
    time.Sleep(deltaT)
    timerChan <- time.Now() // 将时间发送给timerChan
}()
// 做一些其它事情；准备接收
// 接收会阻塞，直到 timerChan 传送值
// 值的发送是另上个 goroutine 结束的时间
completedAt := <-timerChan

select {
case v := <-ch1:
    fmt.Println("channel 1 sends", v)
case v := <-ch2:
    fmt.Println("channel 2 sends", v)
default: // 可选
    fmt.Println("neither channel was ready")
}
